管道是Linux支持的最初Unix IPC形式之一，具有以下特点：

1. 管道是半双工的，数据只能向一个方向流动；
   需要双方通信时，需要建立起两个管道；
2. 只能用于父子进程或者兄弟进程之间（具有亲缘关系的进程）；
3. 单独构成一种独立的文件系统：管道对于管道两端的进程而言，
   就是一个文件，但它不是普通的文件，它不属于某种文件系统，
   而是自立门户，单独构成一种文件系统，并且只存在与内存中。
   数据的读出和写入：一个进程向管道中写的内容被管道另一端的进程读出。
   写入的内容每次都添加在管道缓冲区的末尾，并且每次都是从缓冲区的头部读出数据。

|include-file|
 unistd.h

|pipe|
 pipe(int fd[2])
 [0] in
 [1] out
 like std

使用情况：
1.输入输出重定向
2.父子进程通信

一般 pipe后fork
  e.g. pipe(fd);
       pipe(fd1)
       switch (fork()) {
       case 0:
         //chlid
         close(fd[0]) //close in
         close(fd1[1]) //close out
         break;
       default:
          close(fd[1]); //close out
          close(fd1[0]) //close int
       }

vim:ft=help
