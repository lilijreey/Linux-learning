## 自己动手实现OS随书代码
## OS
###内存管理
* 虚拟内存的实现
* 保护模式切换

## Boot system
see boot.asm
 BISO 加载主引导扇区到 0x7c000, 然后执行加载的代码，
 这段代码负责加载OS

## 实模式
 cpu 启动以后进入的模式，是32-64为为了兼容以前16为cpu 而加入的模式
  20bit 总线, 16bit reg

## 保护模式
  32bit 总线， 32bit reg

## GDT
 保护模式下段寻址的一个数据结构，存放段信息


## 模式切换
 同过设置cr0 reg PE位为1来切换到保护模式

## CPU 特权模式
#操作合法性检测 CPL, DPL, RPL
#  RPL & CPL must <= DRL
#  Qus. 什么时候检测权限?
#
## 切换特权级别
* 使用门

* TSS (Task-State Stacu)
   用来保存一个进程的所有寄存器信息

## 分段
 为内存的重定位实现提供方便
 
## 分页
 用于实现虚拟内存
* 开启分页机制
  cr0 PG 位设置为1
